# AUTOGENERATED! DO NOT EDIT! File to edit: nbs/00_tests/tools/tst.change_manager.ipynb (unless otherwise specified).

__all__ = ['test_change_manager_list']

# Cell
import pytest
import pandas as pd
import os
import joblib
from IPython.display import display
from block_types.utils.nbdev_utils import md

from hpsearch.tools.change_manager import *
from hpsearch.config.manager_factory import ManagerFactory
from hpsearch.examples.example_experiment_manager import ExampleExperimentManager
from hpsearch.examples.dummy_experiment_manager import DummyExperimentManager

# Comes from change_manager.ipynb, cell
def test_change_manager_list ():
    # the following lists stored experiment managers, keeping the current experiment manager
    manager_factory = ManagerFactory ()
    manager_factory.delete_and_reset_all ()

    print ('\ninitial list')
    em_before = manager_factory.get_experiment_manager ()
    change_manager (None)
    em_after = manager_factory.get_experiment_manager ()
    assert em_before.__class__.__name__ == em_after.__class__.__name__

    # **************************************************************
    # same but using ExampleExperimentManager as registered manager
    # **************************************************************
    em = ExampleExperimentManager()
    manager_factory.register_manager (em)
    manager_factory.write_manager (em)

    print ('\nlist after storing ExampleExperimentManager')
    em_before = manager_factory.get_experiment_manager ()
    change_manager (None)
    em_after = manager_factory.get_experiment_manager ()
    # TODO: error in pytest
    #assert em_before.__class__.__name__ == em_after.__class__.__name__

    # we store a third EM (DummyExperimentManager) and list the two
    # stored managers
    print ('\nlist after storing DummyExperimentManager')
    em = DummyExperimentManager()
    manager_factory.register_manager(em)
    manager_factory.write_manager(em)
    assert manager_factory.get_experiment_manager().__class__.__name__ == 'DummyExperimentManager'
    change_manager (None)

    # we change the registered manager back to the first one
    print ('\nlist after changing manager')
    change_manager('ExampleExperimentManager')
    # TODO: error in pytest
    #assert manager_factory.get_experiment_manager().__class__.__name__ == 'ExampleExperimentManager'